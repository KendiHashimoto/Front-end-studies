* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

.ball-red,
.ball-green,
.ball-purple,
.ball-pink {
  width: 100px;
  height: 100px;
  border-radius: 100%;
  margin-bottom: 150px;
  position: relative;
  font-weight: bold;
}

.ball-red {
  background-color: red;

  /* * PROPERTYS  */
  animation-name: ball-red-two;
  animation-duration: 3s;
  animation-delay: 1s;
  animation-iteration-count: 1; // -> Define quantas vezes a animation vai acontecer
  animation-direction: reverse;
}

@keyframes ball-red-one {
  from {
    background-color: blueviolet;
  }

  to {
    background-color: rosybrown;
  }
}

@keyframes ball-red-two {
  0% {
    background-color: blueviolet;
    left: 0;
    top: 0;
  }

  25% {
    background-color: rosybrown;
    left: 100px;
    top: 0;
  }

  50% {
    background-color: blue;
    left: 100px;
    top: 100px;
  }

  75% {
    background-color: yellow;
    left: 0;
    top: 100px;
  }

  100% {
    background-color: red;
    left: 0;
    top: 0;
  }
}

/* 
* TIMING FUNCTIONS 

* ease -> Início lento, rápido e final lento (este é o padrão) 
* linear -> Mesma velocidade do início ao fim 
* easy-in -> Início lento 
* easy-out -> Final lento 
* easy-in-out -> Início e fim lentos 
*/
.timing-functions > div {
  display: flex;
  align-items: center;
  justify-content: center;

  width: 100px;
  height: 50px;
  margin-bottom: 10px;
  background-color: blueviolet;
  color: white;
  font-weight: bold;
  position: relative;

  animation-name: timing-functions;
  animation-duration: 2s;
}

.linear {
  animation-timing-function: linear;
}

.ease {
  animation-timing-function: ease;
}

.ease-in {
  animation-timing-function: ease-in;
}

.ease-out {
  animation-timing-function: ease-out;
}

.ease-in-out {
  animation-timing-function: ease-in-out;
}

@keyframes timing-functions {
  from {
    left: 0px;
  }

  to {
    left: calc(100% - 100px);
  }
}

/*
  * ANIMATIONS FILL MODE 

  * FORWARDS -> Elemente mantém os valores definidos no objeto da finalização da animation.

  * BACKWARDS -> Elemento mantém os valores definidos na primeira chave pelo período de delay da animation // Encerra quando a animation começa.

  * BOTH -> "Ambos" forwards e backwards .Elemente mantém os valores do "from" no período de delay e também mante os valores de "to" após terminar a animation.
*/

.ball-green {
  background-color: green;
  margin-bottom: 20px;

  animation-name: ball-green;
  animation-duration: 2s;
  animation-delay: 2s;

  animation-fill-mode: backwards;
}

@keyframes ball-green {
  from {
    left: 0px;
    background-color: cyan;
  }

  to {
    left: calc(100% - 100px);
  }
}

.ball-purple {
  background-color: purple;
  margin-bottom: 20px;

  animation-name: ball-purple;
  animation-duration: 2s;
  animation-delay: 2s;

  animation-fill-mode: forwards;
}

@keyframes ball-purple {
  from {
    left: 0px;
  }

  to {
    left: calc(100% - 100px);
  }
}

.ball-pink {
  background-color: pink;

  animation-name: ball-pink;
  animation-duration: 2s;
  animation-delay: 2s;

  animation-fill-mode: both;
}

@keyframes ball-pink {
  from {
    left: 0px;
    background-color: yellow;
  }

  to {
    left: calc(100% - 100px);
    background-color: red;
  }
}
