* {
  margin: 1px;
  padding: 0;
  border-sizing: border-box;
}

body {
  display: flex;
  flex-direction: column;

  height: 75vh;
}

/* * 1 - transition-delay é uma propriedade CSS que permite atrasar o inicio de uma transição em uma escala de segundos */

/* * 2 - transistion-property - Propriedade css que queremos aplicar a transição */
/* * 3 - transition-duration - Tempo de duração da transição */

.boxes-container {
  display: flex;
}

.box-red,
.box-green {
  width: 100px;
  height: 100px;
  border-radius: 100%;
  margin-bottom: 10px;
}

.box-red {
  background-color: red;

  /* 1 - property / 2 - duration / 3 - timing / 4 - delay */
  transition: background-color 1s ease 4s;
}

.box-red:hover {
  background-color: yellow;

  transition: background-color 1s ease 4s;
}

.box-green {
  background-color: green;

  /* 1 - All propertys changes / ... */
  transition: all 1s linear 0s;
}

.box-green:hover {
  background-color: pink;
  width: 300px;
  height: 300px;
  border-radius: 8px;

  transition: all 1s ease;
}
/* * 4 - Timing functions  */
/* * ease - Início lento, rápido e final lento (este é o padrão) */
/* * linear - Mesma velocidade do início ao fim */
/* * easy-in - Início lento */
/* * easy-out - Final lento */
/* * easy-in-out - Início e fim lentos */
/* * cubic-bezier(n,n,n,n) - Permite definir seus próprios valores em uma função cubic-bezier */
p {
  font-weight: bold;
}

.line {
  width: 100%;
  background-color: blue;
  height: 25px;
  margin-bottom: 10px;
  font-weight: bold;

  transition: width;
  transition-duration: 1s;
}

body:hover .line {
  width: 20px;
  background-color: red;
}

.ease {
  transition-timing-function: ease;
}

.linear {
  transition-timing-function: linear;
}

.ease-in {
  transition-timing-function: ease-in;
}

.ease-out {
  transition-timing-function: ease-out;
}

.ease-in-out {
  transition-timing-function: ease-in-out;
}

.cube {
  transition-timing-function: cubic-bezier(0.175, 0.885, 0.32, 1.275);
}